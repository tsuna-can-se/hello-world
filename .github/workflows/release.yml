name: リリース

on:
  push:
    tags: 
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-Beta[0-9]+'

env:
  PACKAGING_PROJECT_NAME: TsunaCan.HelloWorld
  TEST_PROJECT_NAME: Test.TsunaCan.HelloWorld
  PACKAGE_ARTIFACT_NAME: packages

jobs:
  packaging:
    name: パッケージング
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIGURATION: Release
    outputs:
      is_pre_release: ${{ steps.setup-variables.outputs.is_pre_release }}
      package_version: ${{ steps.setup-variables.outputs.package_version }}
      file_version: ${{ steps.setup-variables.outputs.file_version }}

    steps:
      - id: setup-variables
        name: 変数の初期化
        run: |
          pre_release=false
          if [[ "${{ github.ref_name }}" == *"Beta"* ]]; then
            pre_release=true
          fi
          echo "is_pre_release:$pre_release"
          echo "is_pre_release=$pre_release" >> $GITHUB_ENV
          echo "is_pre_release=$pre_release" >> $GITHUB_OUTPUT

          package_version="${{ github.ref_name }}"
          echo "package_version:$package_version"
          echo "package_version=$package_version" >> $GITHUB_ENV
          echo "package_version=$package_version" >> $GITHUB_OUTPUT

          file_version=${package_version:1}
          echo "file_version:$file_version"
          echo "file_version=$file_version" >> $GITHUB_ENV
          echo "file_version=$file_version" >> $GITHUB_OUTPUT

      - name: ブランチのチェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: NuGet パッケージの作成
        run: |
          mkdir $PACKAGE_ARTIFACT_NAME
          dotnet pack ./src/$PACKAGING_PROJECT_NAME/$PACKAGING_PROJECT_NAME.csproj --configuration $BUILD_CONFIGURATION --output $PACKAGE_ARTIFACT_NAME -p:PackageVersion=$file_version -p:Version=$file_version -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg

      - name: ビルドアーティファクトのアップロード
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_ARTIFACT_NAME }}
          path: ${{ env.PACKAGE_ARTIFACT_NAME }}/
          retention-days: 3

  release-to-github:
    name: GitHub へのリリース
    runs-on: ubuntu-latest
    needs: packaging

    steps:
      - name: ビルドアーティファクトのダウンロード
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PACKAGE_ARTIFACT_NAME }}

      - id: create-github-release
        name: GitHub のリリース作成
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.nupkg
            *.snupkg
          generate_release_notes: true
          name: "${{ needs.packaging.outputs.package_version }}"
          prerelease: ${{ needs.packaging.outputs.is_pre_release }}
          tag_name: "${{ needs.packaging.outputs.package_version }}"

      - name: GitHub のリリース結果表示
        run: |
          echo "Is pre-release:${{ needs.packaging.outputs.is_pre_release }}"
          echo "Package version:${{ needs.packaging.outputs.package_version }}"
          echo "Release page URL:${{ steps.create-github-release.outputs.url }}"
          echo "# GitHub release info :octocat:" >> $GITHUB_STEP_SUMMARY
          echo "Release page URL: <${{ steps.create-github-release.outputs.url }}>" >> $GITHUB_STEP_SUMMARY

  release-to-nuget:
    name: NuGet へのリリース
    runs-on: ubuntu-latest
    needs: packaging

    steps:
      - name: ビルドアーティファクトのダウンロード
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PACKAGE_ARTIFACT_NAME }}

      - name: NuGet パッケージの公開
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          NUGET_SOURCE: https://api.nuget.org/v3/index.json
          LOG_FILE_NAME: nuget_push_log.txt
        run: |
          dotnet nuget push $PACKAGING_PROJECT_NAME.${{ needs.packaging.outputs.file_version }}.nupkg --api-key $NUGET_API_KEY --source $NUGET_SOURCE --nologo > $LOG_FILE_NAME
          cat $LOG_FILE_NAME
          echo "# NuGet release info :toolbox:" >> $GITHUB_STEP_SUMMARY
          cat $LOG_FILE_NAME >> $GITHUB_STEP_SUMMARY
