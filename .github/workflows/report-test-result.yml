name: テストの結果表示

on:
  workflow_run: 
    workflows: [ビルドと単体テスト]
    types: 
      - completed

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  test-report:
    name: テスト結果の表示
    
    runs-on: ubuntu-latest

    steps:
      - name: テスト結果のダウンロード
        uses: actions/download-artifact@v4
        with:
          pattern: unit-test-results-*

      - id: create-test-result-report
        name: テスト結果ページの作成
        uses: dorny/test-reporter@v1
        with:
          name: 'unit test results'
          path: '**/TestResults/*.trx'
          path-replace-backslashes: 'true'
          reporter: 'dotnet-trx'
          only-summary: 'false'
          list-suites: 'all'
          list-tests: 'all'
          max-annotations: '10'
          fail-on-error: 'true'
    
      - name: テスト結果のサマリー表示
        shell: bash
        run: |
          echo '## Test Result :memo:' >> $GITHUB_STEP_SUMMARY
          echo 'Test was a ${{ steps.create-test-result-report.outputs.conclusion }}.' >> $GITHUB_STEP_SUMMARY
          echo 'Completed in ${{ steps.create-test-result-report.outputs.time }}ms with ${{ steps.create-test-result-report.outputs.passed }} passed, ${{ steps.create-test-result-report.outputs.failed }} failed and ${{ steps.create-test-result-report.outputs.skipped }} skipped.' >> $GITHUB_STEP_SUMMARY
    
      - id: create-coverage-report
        name: コードカバレッジレポートの解析
        uses: danielpalme/ReportGenerator-GitHub-Action@5
        with:
          reports: '**/TestResults/*/coverage.cobertura.xml'
          targetdir: 'CoverageReport'
          reporttypes: 'MarkdownSummaryGithub'
    
      - name: コードカバレッジの結果表示
        shell: bash
        run: |
          echo '## Coverage :triangular_ruler:' >> $GITHUB_STEP_SUMMARY
          sed -i s/'# Summary'/'Coverage report.'/g CoverageReport/SummaryGithub.md
          sed -i -e '/^#/d' CoverageReport/SummaryGithub.md
          cat CoverageReport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
    
      - name: コードカバレッジの結果をPull-requestに表示
        uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          recreate: true
          path: CoverageReport/SummaryGithub.md
    
